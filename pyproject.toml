[tool.poetry]
name = "lvmh-ai-dataiku-plugin-retrieval-reco"
version = "0.0.0"
description = "Plugin for product recommendation based on two-tower model architecture."
authors = ["Your Name <you@lvmh.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.9,<3.11"

[tool.poetry.group.dev.dependencies]
pytest = "8.3.4"
ruff = "0.9.2"
pre-commit = "4.1.0"
interrogate = "1.7.0"
python-semantic-release = "9.8.8"

[tool.poetry.group.docs.dependencies]
mkdocs-material = "9.5.35"
mkdocs-swagger-ui-tag = "0.6.10"
mkdocstrings = {extras = ["python"], version = "0.26.1"}

[tool.pytest.ini_options]
testpaths = [
    "python-lib/deep2tower/tests/*"
]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
line-length = 100
indent-width = 4
fix = true
target-version = "py39"

[tool.ruff.lint]
select = ["B", "C", "E", "F", "I", "W"]
ignore = ["E501", "E731", "B006"]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.mccabe]
max-complexity = 18

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint.pycodestyle]
max-doc-length = 120

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.interrogate]
ignore-init-method = true
ignore-init-module = false
ignore-magic = false
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = false
ignore-module = true
ignore-nested-functions = false
ignore-nested-classes = true
ignore-setters = false
fail-under = 95
exclude = ["setup.py", "docs", "build"]
ignore-regex = ["^get$", "^mock_.*", ".*BaseClass.*"]
verbose = 0
quiet = false
whitelist-regex = []
color = true

[tool.semantic_release]
version_variables = [
    "python-lib/deep2tower//__init__.py:__version__",
    '''plugin.json:"version"''',
]
version_toml = ["pyproject.toml:tool.poetry.version"]
assets = []

[tool.semantic_release.branches.main]
match = "main"

[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "add",
    "rm",
    "build",
    "conf",
    "config",
    "cfg",
    "ci",
    "docs",
    "feat",
    "fix",
    "perf",
    "style",
    "refactor",
    "test",
    "merge",
    "revert",
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
